class Solution {
    bool sudoku(vector<vector<char>>& board){
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[i].size();j++){
                if(board[i][j]=='.'){
                    for(int c='1';c<='9';c++){
                        if(isSafe(i,j,c,board)){
                            board[i][j]=c;
                            if(sudoku(board)) return true;
                            board[i][j]='.';
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    bool isSafe(int row,int col,char c,vector<vector<char>>& board){
        for(int i=0;i<9;i++){
            if(board[row][i]==c)
                return false;
            if(board[i][col]==c)
                return false;
            if(board[3*(row/3)+ i/3][3*(col/3)+i%3]==c)
                return false;
           
        }
         return true;
    }
public:
    void solveSudoku(vector<vector<char>>& board) {
        sudoku(board);
    }
    
};
